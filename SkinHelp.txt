SkinSharp4Go 函数列表
!!本库仅支持标准 Windows 控件的换肤，推荐 lxn/walk 界面库

/*  功能  :	加载路径的皮肤进行换肤									*/
/*	返回值: 成功返回0, 失败返回非0										*/

skinh.Attach()
	strSkinFile, 	//皮肤文件路径(可省略)
	strPassword	string	//皮肤密钥(可省略)
);


/*
功能:	加载指定路径的皮肤进行换肤并指定相应的色调，饱和度，亮度
返回值: 成功返回0, 失败返回非0
*/
skinh.AttachEx(
	strSkinFile,	//皮肤文件路径
	strPassword string,	//皮肤密钥
	nHue,				//色调，	取值范围-180-180, 默认值0
	nSat,				//饱和度，	取值范围-100-100, 默认值0
	nBri	 int			//亮度，	取值范围-100-100, 默认值0
);


/*
功能:	加载指定资源进行换肤并指定相应的色调，饱和度，亮度
返回值: 成功返回0, 失败返回非0	
*/
skinh.AttachRes(
	pShe,			//资源皮肤数据指针
	dwSize int,			//资源皮肤数据长度
	strPassword string,	//皮肤密钥
	nHue,				//色调，	取值范围-180-180, 默认值0
	nSat,				//饱和度，	取值范围-100-100, 默认值0
	nBri	 int		//亮度，	取值范围-100-100, 默认值0
);


/*
功能:	加载指定皮肤资源进行换肤并指定相应的色调，饱和度，亮度
返回值: 成功返回0, 失败返回非0
*/
skinh.AttachResEx(
	lpName,			//资源名
	lpType,			//资源类型
	strPassword string,	//皮肤密钥
	nHue,				//色调，	取值范围-180-180, 默认值0
	nSat,				//饱和度，	取值范围-100-100, 默认值0
	nBri	 int			//亮度，	取值范围-100-100, 默认值0
);


/*
功能:	卸载换肤	
返回值: 成功返回0, 失败返回非0	
*/
skinh.Detach();


/*
功能:	卸载指定句柄的窗体或者控件的皮肤	
返回值: 成功返回0, 失败返回非0	
*/
skinh.DetachEx(
	hWnd	 int		//指定卸载皮肤的窗体或控件的句柄
);


/*
功能:	设置指定窗体的透明度
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetWinAlpha(
	hWnd,				//窗体的句柄 
	nAlpha int			//透明度
);


/*
功能:	调整当前皮肤的色调，饱和度，亮度
返回值: 成功返回0, 失败返回非0	
*/
skinh.AdjustHSV(
	nHue,				//色调，	取值范围-180-180, 默认值0
	nSat,				//饱和度，	取值范围-100-100, 默认值0
	nBri	 int			//亮度，	取值范围-100-100, 默认值0
);


/*
功能:	获取指定窗口或控件在nX,nY处的颜色值 
返回值: 成功返回0, 失败返回非0	
*/
skinh.GetColor(
	hWnd,				//指定窗体或控件的句柄
	nX,					//横坐标
	nY	int				//纵坐标
);


/*
功能:	指定窗体和控件的换肤类型
返回值: 成功返回0, 失败返回非0	
*/
skinh.Map(
	hWnd,				//指定窗体或控件的句柄 
	nType int				//换肤类型
);


/*
功能:	设置Aero特效
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetAero(
	bAero int			//1为开启特效,0为关闭特效 
);


/*
功能:	设置Aero特效参数
返回值: 成功返回0, 失败返回非0	
*/
skinh.AdjustAero(
	nAlpha,				//透明度,   0-255, 默认值0
	nShwDark,			//亮度,     0-255, 默认值0
	nShwSharp,			//锐度,	    0-255, 默认值0 
	nShwSize,			//阴影大小, 2-19,  默认值2
	nX,					//水平偏移, 0-25,  默认值0 (目前不支持)
	nY,					//垂直偏移, 0-25,  默认值0 (目前不支持)
	nRed,				//红色分量, 0-255, 默认值 -1
	nGreen,				//绿色分量, 0-255, 默认值 -1 
	nBlue uintptr		//蓝色分量, 0-255, 默认值 -1 
);


/*
功能:	设置窗体是否可以移动
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetWinMovable(
	hWnd int,				//窗口句柄 
	bMovable bool			//0为不可移动, 1为可移动
);


/*
功能:	设置控件的背景色(目前仅对单选框, 复选框, 分组框有效)
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetBkColor(
	hWnd,				//控件句柄
	nRed,				//红色分量
	nGreen,				//绿色分量
	nBlue uintptr				//蓝色分量
);


/*
功能:	设置控件的文本颜色色(目前仅对单选框,复选框,分组框有效)
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetForeColor(
	hWnd,				//控件句柄
	nRed,				//红色分量
	nGreen,				//绿色分量
	nBlue	uintptr			//蓝色分量
);


/*
功能:	用于填充表格或者列表控件数据时，重复绘制影响执行效率问题
返回值: 成功返回0, 失败返回非0	
*/
skinh.LockUpdate(
	hWnd int,				//指定窗体或控件的句柄 
	bUpdate	bool			//1为锁定绘制，0为解锁绘制 
);


/*
功能:	设置菜单透明度
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetMenuAlpha(
	nAlpha int		//菜单透明度，取值范围 0 - 255
);


/*
功能:	绘制指定设备上下文的元素
返回值: 成功返回0, 失败返回非0	
*/
skinh.NineBlt(
	hDtDC,				//目标设备上下文
	left,				//左上角水平坐标
	top,				//左上角垂直坐标
	right,				//右下角水平坐标
	bottom,				//右下角垂直坐标
	nMRect uintptr		//元素id
);

/*
功能:	设置标题菜单栏
返回值: 成功返回0, 失败返回非0	
*/
skinh.SetTitleMenuBar(
	hWnd uintptr, 	//窗口句柄
	bEnable bool,	//是否设置 1为设置， 0 为取消 
	nTMenuY, 	//菜单栏高度
	nTopOffs, 	//顶部偏移
	nRightOffs uintptr 	//右部偏移
);


/*
功能:	设置控件的字体
返回值: 成功返回0, 失败返回非0
*/
skinh.SetFont(
	hWnd,		//控件的句柄
	hFont int	//字体句柄
);


/*
功能:	设置控件的字体
返回值: 成功返回0, 失败返回非0
*/
skinh.SetFontEx(
	hWnd,		//控件的句柄
	szFace,	//字体名称
	nHeight,	//字体高度
	nWidth,		//字体宽度
	nWeight,	//字体磅数
	nItalic,	//是否斜体
	nUnderline,	//是否下划线
	nStrikeOut uintptr	//是否删除线
);


/*
功能:	返回签名结果
返回值: 已签名返回1，未签名返回0
*/
skinh.VerifySign();
